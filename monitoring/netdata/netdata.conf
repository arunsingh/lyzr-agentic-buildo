# Netdata Configuration for AOB Platform

# Netdata configuration file for comprehensive monitoring
# This configuration enables monitoring of all core infrastructure and applications

[global]
    # Basic settings
    hostname = aob-platform
    memory mode = ram
    history = 3600
    update every = 1
    
    # Web server settings
    bind to = 0.0.0.0:19999
    web files owner = netdata
    web files group = netdata
    
    # Database settings
    dbengine multihost disk space MB = 256
    dbengine page cache size MB = 32
    
    # Logging
    debug log = none
    error log = none
    access log = none
    
    # Security
    allow connections from = *
    allow streaming from = *
    allow commands from = *
    
    # Performance
    max realtime priority = 1
    scheduler policy = other
    process scheduling policy = other
    process scheduling priority = 0

[web]
    # Web interface settings
    default port = 19999
    bind to = 0.0.0.0:19999
    
    # Security headers
    enable gzip compression = yes
    gzip compression level = 3
    gzip compression strategy = default
    
    # CORS settings
    allow cors from = *
    
    # Authentication (disabled for development)
    enable web authentication = no

[stream]
    # Streaming settings for distributed monitoring
    enabled = yes
    destination = netdata-parent:19999
    api key = netdata-api-key
    allow from = *
    
    # Compression
    enable compression = yes
    compression algorithm = lz4
    
    # Buffer settings
    buffer size bytes = 1048576
    reconnect delay seconds = 5
    initial clock resync iterations = 10

[plugins]
    # Enable all plugins
    python.d = yes
    go.d = yes
    node.d = yes
    apps = yes
    cgroup = yes
    perf = yes
    diskspace = yes
    tc = yes
    idlejitter = yes
    check = yes
    proc = yes
    
    # Python plugins
    python.d:postgres = yes
    python.d:redis = yes
    python.d:nginx = yes
    python.d:apache = yes
    python.d:mysql = yes
    python.d:mongodb = yes
    python.d:memcached = yes
    python.d:elasticsearch = yes
    python.d:prometheus = yes
    python.d:docker = yes
    python.d:kubernetes = yes
    
    # Go plugins
    go.d:prometheus = yes
    go.d:docker = yes
    go.d:kubernetes = yes
    go.d:consul = yes
    go.d:vault = yes
    go.d:nomad = yes
    
    # Node.js plugins
    node.d:statsd = yes
    node.d:collectd = yes

[python.d]
    # Python plugin settings
    enabled = yes
    update every = 1
    
    # PostgreSQL monitoring
    postgres:
        enabled = yes
        host = postgres
        port = 5432
        user = postgres
        password = postgres
        database = postgres
        
    # Redis monitoring
    redis:
        enabled = yes
        host = redis
        port = 6379
        password = 
        
    # Docker monitoring
    docker:
        enabled = yes
        socket = unix:///var/run/docker.sock
        
    # Prometheus monitoring
    prometheus:
        enabled = yes
        url = http://prometheus:9090
        scrape_interval = 5

[go.d]
    # Go plugin settings
    enabled = yes
    update every = 1
    
    # Docker monitoring
    docker:
        enabled = yes
        socket = unix:///var/run/docker.sock
        
    # Kubernetes monitoring
    kubernetes:
        enabled = yes
        kubeconfig = /etc/kubernetes/kubeconfig
        
    # Prometheus monitoring
    prometheus:
        enabled = yes
        url = http://prometheus:9090
        scrape_interval = 5

[node.d]
    # Node.js plugin settings
    enabled = yes
    update every = 1
    
    # StatsD monitoring
    statsd:
        enabled = yes
        port = 8125
        
    # CollectD monitoring
    collectd:
        enabled = yes
        port = 25826

[apps]
    # Application monitoring
    enabled = yes
    update every = 1
    
    # Process monitoring
    proc:
        enabled = yes
        update every = 1
        
    # System monitoring
    system:
        enabled = yes
        update every = 1
        
    # Network monitoring
    net:
        enabled = yes
        update every = 1
        
    # Disk monitoring
    disk:
        enabled = yes
        update every = 1
        
    # Memory monitoring
    mem:
        enabled = yes
        update every = 1
        
    # CPU monitoring
    cpu:
        enabled = yes
        update every = 1

[cgroup]
    # Container monitoring
    enabled = yes
    update every = 1
    
    # Docker containers
    docker:
        enabled = yes
        socket = unix:///var/run/docker.sock
        
    # Kubernetes pods
    kubernetes:
        enabled = yes
        kubeconfig = /etc/kubernetes/kubeconfig

[perf]
    # Performance monitoring
    enabled = yes
    update every = 1
    
    # CPU performance
    cpu:
        enabled = yes
        update every = 1
        
    # Memory performance
    memory:
        enabled = yes
        update every = 1
        
    # Disk performance
    disk:
        enabled = yes
        update every = 1
        
    # Network performance
    network:
        enabled = yes
        update every = 1

[diskspace]
    # Disk space monitoring
    enabled = yes
    update every = 1
    
    # Mount points
    mount_points:
        enabled = yes
        update every = 1
        
    # Disk usage
    disk_usage:
        enabled = yes
        update every = 1

[tc]
    # Traffic control monitoring
    enabled = yes
    update every = 1
    
    # Network interfaces
    interfaces:
        enabled = yes
        update every = 1
        
    # Traffic shaping
    traffic_shaping:
        enabled = yes
        update every = 1

[idlejitter]
    # Idle jitter monitoring
    enabled = yes
    update every = 1
    
    # CPU idle jitter
    cpu:
        enabled = yes
        update every = 1
        
    # Memory idle jitter
    memory:
        enabled = yes
        update every = 1

[check]
    # Health check monitoring
    enabled = yes
    update every = 1
    
    # Service health
    services:
        enabled = yes
        update every = 1
        
    # Process health
    processes:
        enabled = yes
        update every = 1

[proc]
    # Process monitoring
    enabled = yes
    update every = 1
    
    # Process list
    process_list:
        enabled = yes
        update every = 1
        
    # Process details
    process_details:
        enabled = yes
        update every = 1
